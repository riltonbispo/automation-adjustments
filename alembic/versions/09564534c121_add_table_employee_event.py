"""add table employee_event

Revision ID: 09564534c121
Revises: 14415c43fe13
Create Date: 2025-07-31 12:55:07.276029

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '09564534c121'
down_revision: Union[str, Sequence[str], None] = '14415c43fe13'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('RPAProposalV2')
    op.drop_table("('Employee_event',)")
    op.drop_table('Employee')
    op.drop_table('Event')
    op.drop_index(op.f('ix_RPAProposal_id'), table_name='RPAProposal')
    op.drop_table('RPAProposal')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("('Employee_event',)",
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['Employee.id_ponto_mais'], name=op.f("('Employee_event',)_employee_id_fkey")),
    sa.ForeignKeyConstraint(['event_id'], ['Event.event_id'], name=op.f("('Employee_event',)_event_id_fkey")),
    sa.PrimaryKeyConstraint('employee_id', 'event_id', name=op.f("('Employee_event',)_pkey"))
    )
    op.create_table('RPAProposalV2',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('integration_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['Employee.id_ponto_mais'], name=op.f('RPAProposalV2_employee_id_fkey')),
    sa.ForeignKeyConstraint(['event_id'], ['Event.event_id'], name=op.f('RPAProposalV2_event_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('RPAProposalV2_pkey'))
    )
    op.create_table('RPAProposal',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employeeId', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('eventId', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('integrationDateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('RPAProposal_pkey'))
    )
    op.create_index(op.f('ix_RPAProposal_id'), 'RPAProposal', ['id'], unique=False)
    op.create_table('Event',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('event_id', name=op.f('Event_pkey'))
    )
    op.create_table('Employee',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_ponto_mais', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id_ponto_mais', name=op.f('Employee_pkey'))
    )
    # ### end Alembic commands ###
